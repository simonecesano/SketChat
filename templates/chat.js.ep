paper.install(window);

function createUUIDv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
	var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
	return v.toString(16);
    });
}

window.onload = function() {
    paper.setup('canvas');

    var project = paper.project;
    var tool = new Tool();
    var sketChat = new SketChat('<%= url_for('channel')->to_abs %>', paper)
    
    $.get('<%= url_for('messages')->to_abs %>', d => {
	d.forEach(p => {
	    if (!(sketChat.processMessage(p.event, true))) {
		$.post('<%= url_for('/messages/invalid')->to_abs %>',
		       { id: p.event_id },
		       d => { console.log(d) });
	    }
	})
    })
    

    tool.minDistance = 10;
    tool.maxDistance = 45;

    var speed = 0;

    var brush = new InkBrush(project, sketChat.socket);
    
    tool.onMouseDown = brush.onMouseDown;
    tool.onMouseDrag = brush.onMouseDrag;
    tool.onMouseUp   = brush.onMouseUp;

    $('#clear').on('click', e => {
	console.log(e);
	paper.project.clear()
	sketChat.socket.send(JSON.stringify({ paperCommand: 'project.clear()' }))
    })

    $('#eraser').on('click', e => {
	tool.minDistance = 1;
	var eraser = new Eraser(project, sketChat.socket);

	tool.onMouseDown = eraser.onMouseDown;
	tool.onMouseDrag = eraser.onMouseDrag;
	tool.onMouseUp   = eraser.onMouseUp;
    })    

    $('#inkpen').on('click', e => {
	tool.minDistance = 10;
	var brush = new InkBrush(project, sketChat.socket);
	
	tool.onMouseDown = brush.onMouseDown;
	tool.onMouseDrag = brush.onMouseDrag;
	tool.onMouseUp   = brush.onMouseUp;
    })

    $('#sharpie').on('click', e => {
	tool.minDistance = 10;
	var sharpie = new WrongSharpie(project, sketChat.socket);
	
	tool.onMouseDown = sharpie.onMouseDown;
	tool.onMouseDrag = sharpie.onMouseDrag;
	tool.onMouseUp   = sharpie.onMouseUp;
    })

    
    $('#new').on('click', e => {
	var uuid4 = createUUIDv4 ();
	console.log(uuid4);
	window.location = '<%= url_for('canvas/')->to_abs %>' + uuid4;
    })    
}
		    	      
